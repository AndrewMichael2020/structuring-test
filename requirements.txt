# Core
requests
beautifulsoup4
pandas

# Dates
python-dateutil

# OCR support
playwright
pillow
pytesseract
pytest

# LLM-based enrichment
openai
readability-lxml
lxml

# Load .env files for local development (used by accident_info.py to read OPENAI_API_KEY etc.)
python-dotenv

# Google Drive integration
google-api-python-client
google-auth
google-auth-httplib2
google-auth-oauthlib

# Frontend (Node.js) dependencies noted for completeness
# gray-matter (for parsing markdown front-matter)
# sanitize-html (for security)

# pip install -r requirements.txt

# source venv/bin/activate

# python3 -m playwright install
# python3 -m playwright install-deps
# python3 -m playwright install
# python3 -m playwright codegen https://example.com

# python main.py "..."

# python - <<'PY'
# from store_artifacts import force_rebuild_and_upload_artifacts_csv
# print('Rebuilding...')
# force_rebuild_and_upload_artifacts_csv()
# print('Done')
# PY

# python main.py --urls-file urls.txt --mode text-only --batch-size 3

# USeful git commands here:
# git status --porcelain -b
# git push origin HEAD:main --force

# Run the full batch pipeline from urls.txt:
# python main.py --urls-file urls.txt --batch-size 7 --assign-event-ids --merge-events --generate-reports

# Post-json-creation commands only:
# python main.py --assign-event-ids --merge-events --generate-reports --cache-clear

# Or just create reports: python services/report_service.py
# ("--event-id 2bc55...ea6b1" is option)

# then the list: python3 scripts/build_reports_list.py
# the uload all: # If you set GCS_BUCKET in .env (or exported), this will use that value.
# python3 scripts/build_reports_list.py --upload

# upload: python3 scripts/upload_reports.py --method auto
# python3 scripts/upload_reports.py --method gsutil
# or write bucket name in CLI: python3 scripts/upload_reports.py --bucket my-bucket-name --method auto

# VErify: curl -sS https://storage.googleapis.com/$GCS_BUCKET/reports/list.json | jq .
# verify reports: gsutil ls gs://$GCS_BUCKET/reports/



# Test-deploy from workspace: gcloud run deploy accident-reports-frontend --source ./app --region us-west1 --platform managed --allow-unauthenticated --set-env-vars GCS_BUCKET=accident-reports-artifacts,NODE_ENV=production,OPENAI_API_KEY=${OPENAI_API_KEY} --quiet